/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package GUI;

import BUS.CustomerBUS;
import BUS.OrderBUS;
import BUS.VegetableBUS;
import Entities.Customer;
import Entities.Order;
import Entities.OrderDetail;
import Entities.Vegetable;

import javax.swing.*;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import java.awt.*;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.time.format.DateTimeParseException;
import java.util.ArrayList;
import java.util.List;

/**
 * @author pc
 */
public class OrderGUI1 extends javax.swing.JPanel {
    private final VegetableBUS vegetableBUS = new VegetableBUS();
    private final OrderBUS orderBUS = new OrderBUS();
    private final CustomerBUS customerBUS = new CustomerBUS();

    /**
     * Creates new form OrderGUI1
     */
    public OrderGUI1() {
        initComponents();
        showOrderListTable();
    }

    public class MultiLineTableCellRenderer extends DefaultTableCellRenderer {

        private static final long serialVersionUID = 1L;
        private JTextArea textArea;

        public MultiLineTableCellRenderer() {
            textArea = new JTextArea();
            textArea.setLineWrap(true);
            textArea.setWrapStyleWord(true);
        }

        @Override
        public Component getTableCellRendererComponent(JTable table, Object value,
                                                       boolean isSelected, boolean hasFocus, int row, int column) {
            if (value != null) {
                textArea.setText(value.toString());
            } else {
                textArea.setText("");
            }
            return textArea;
        }
    }

    private void changeTableHeight(JTable table) {
        int rowHeight = table.getRowHeight();
        int numRows = table.getRowCount();
        int height = numRows * rowHeight;
        table.setPreferredSize(new Dimension(table.getPreferredSize().width, height));
    }

    public void showOrderListTable() {
        List<Order> orderList = orderBUS.getOrders();
        showOrderListTable(orderList);
    }

    public void showOrderListTable(List<Order> orderList) {
        DefaultTableModel model = (DefaultTableModel) tblOrderList.getModel();
        model.setRowCount(0);

        for (Order order : orderList) {
            Object[] row = new Object[7];
            row[0] = order.getOrderID();
            row[1] = order.getDate();
            row[2] = order.getCustomer().getCustomerID();
            row[3] = order.getCustomer().getFullname();
            row[4] = order.getTotal();

            List<String> vegetableList = new ArrayList<>();
            for (OrderDetail detail : order.getOrderDetails()) {
                String vegetable = detail.getVegetable().getVegetableName() + " ("
                        + detail.getVegetable().getVegetableID() + "): "
                        + detail.getVegetable().getPrice() + " * "
                        + detail.getQuantity();
                vegetableList.add(vegetable);
            }
            row[5] = String.join("\n", vegetableList);

            row[6] = order.getNote();
            model.addRow(row);
        }

        TableColumn column = tblOrderList.getColumnModel().getColumn(4);
        column.setCellRenderer(new MultiLineTableCellRenderer());
        changeTableHeight(tblOrderList);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        txtCustomerID = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        txtVegetableID = new javax.swing.JTextField();
        btnAddVegetable = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        txtQuantity = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtNote = new javax.swing.JTextArea();
        jLabel14 = new javax.swing.JLabel();
        btnRemoveVegetable = new javax.swing.JButton();
        txtDate = new javax.swing.JTextField();
        jPanel8 = new javax.swing.JPanel();
        btnReset = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnAddOrder = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        txtTotal = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblVegetableList = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtSearchByCustomerName = new javax.swing.JTextField();
        btnSearchByCustomerName = new javax.swing.JButton();
        btnSearchByDate = new javax.swing.JButton();
        txtEndDate = new javax.swing.JTextField();
        txtStartDate = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblOrderList = new javax.swing.JTable();

        jPanel1.setLayout(new java.awt.BorderLayout());

        jPanel2.setBackground(new java.awt.Color(255, 204, 255));
        jPanel2.setPreferredSize(new java.awt.Dimension(270, 600));
        jPanel2.setLayout(new java.awt.BorderLayout());

        jPanel5.setBackground(new java.awt.Color(255, 204, 204));
        jPanel5.setPreferredSize(new java.awt.Dimension(270, 320));

        jLabel13.setText("Quantity:");

        jLabel12.setText("Vegetable ID:");

        btnAddVegetable.setBackground(new java.awt.Color(51, 153, 255));
        btnAddVegetable.setText("Add vegetable");
        btnAddVegetable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddVegetableActionPerformed(evt);
            }
        });

        jLabel11.setText("Customer ID:");

        jLabel10.setText("Date:");

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setText("Order");

        txtNote.setColumns(20);
        txtNote.setRows(5);
        jScrollPane3.setViewportView(txtNote);

        jLabel14.setText("Note:");

        btnRemoveVegetable.setBackground(new java.awt.Color(51, 153, 255));
        btnRemoveVegetable.setText("Remove vegetable");
        btnRemoveVegetable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveVegetableActionPerformed(evt);
            }
        });

        txtDate.setForeground(new java.awt.Color(102, 102, 102));
        txtDate.setText("dd/mm/yyyy");
        txtDate.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtDateFocusGained(evt);
            }

            public void focusLost(java.awt.event.FocusEvent evt) {
                txtDateFocusLost(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
                jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jScrollPane3)
                                        .addGroup(jPanel5Layout.createSequentialGroup()
                                                .addContainerGap()
                                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                                                                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                .addComponent(txtDate, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                                                                .addGap(0, 0, Short.MAX_VALUE)
                                                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                                        .addComponent(txtCustomerID, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                        .addComponent(txtVegetableID, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                                        .addGroup(jPanel5Layout.createSequentialGroup()
                                                                .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                .addComponent(txtQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                        .addGroup(jPanel5Layout.createSequentialGroup()
                                                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                        .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                        .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                                .addGap(0, 0, Short.MAX_VALUE)))))
                                .addContainerGap())
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(btnRemoveVegetable)
                                .addGap(18, 18, 18)
                                .addComponent(btnAddVegetable)
                                .addGap(33, 33, 33))
                        .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGap(96, 96, 96)
                                .addComponent(jLabel1)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
                jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(34, 34, 34)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel10)
                                        .addComponent(txtDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel11)
                                        .addComponent(txtCustomerID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel12)
                                        .addComponent(txtVegetableID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(txtQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel13))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(btnAddVegetable)
                                        .addComponent(btnRemoveVegetable))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel14)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(14, Short.MAX_VALUE))
        );

        jPanel2.add(jPanel5, java.awt.BorderLayout.PAGE_START);

        jPanel8.setBackground(new java.awt.Color(255, 255, 204));

        btnReset.setBackground(new java.awt.Color(51, 153, 255));
        btnReset.setText("Reset");
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });

        btnDelete.setBackground(new java.awt.Color(51, 153, 255));
        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnAddOrder.setBackground(new java.awt.Color(51, 153, 255));
        btnAddOrder.setText("Add order");
        btnAddOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddOrderActionPerformed(evt);
            }
        });

        btnUpdate.setBackground(new java.awt.Color(51, 153, 255));
        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        jLabel3.setText("Order's total:");

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
                jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel8Layout.createSequentialGroup()
                                                .addGap(32, 32, 32)
                                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(txtTotal))
                                        .addGroup(jPanel8Layout.createSequentialGroup()
                                                .addGap(24, 24, 24)
                                                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                        .addComponent(btnDelete, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(btnAddOrder, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 45, Short.MAX_VALUE)
                                                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                        .addComponent(btnUpdate, javax.swing.GroupLayout.DEFAULT_SIZE, 84, Short.MAX_VALUE)
                                                        .addComponent(btnReset, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                                .addGap(33, 33, 33))
        );
        jPanel8Layout.setVerticalGroup(
                jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jLabel3)
                                        .addComponent(txtTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(btnAddOrder, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(btnUpdate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(btnDelete)
                                        .addComponent(btnReset))
                                .addContainerGap())
        );

        jPanel2.add(jPanel8, java.awt.BorderLayout.PAGE_END);

        jScrollPane2.setPreferredSize(new java.awt.Dimension(270, 180));

        tblVegetableList.setModel(new javax.swing.table.DefaultTableModel(
                new Object[][]{

                },
                new String[]{
                        "ID", "Name", "Price", "Quantity", "Total"
                }
        ) {
            Class[] types = new Class[]{
                    java.lang.Integer.class, java.lang.String.class, java.lang.Float.class, java.lang.Integer.class, java.lang.Float.class
            };

            public Class getColumnClass(int columnIndex) {
                return types[columnIndex];
            }
        });
        tblVegetableList.setPreferredSize(new java.awt.Dimension(270, 180));
        tblVegetableList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblVegetableListMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblVegetableList);

        jPanel2.add(jScrollPane2, java.awt.BorderLayout.CENTER);

        jPanel1.add(jPanel2, java.awt.BorderLayout.LINE_START);

        jPanel3.setBackground(new java.awt.Color(204, 255, 204));
        jPanel3.setPreferredSize(new java.awt.Dimension(730, 600));
        jPanel3.setLayout(new java.awt.BorderLayout());

        jPanel4.setBackground(new java.awt.Color(255, 255, 204));
        jPanel4.setLayout(new java.awt.BorderLayout());

        jPanel7.setBackground(new java.awt.Color(204, 255, 204));
        jPanel7.setPreferredSize(new java.awt.Dimension(730, 50));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 30)); // NOI18N
        jLabel2.setText("Order Management");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
                jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel7Layout.createSequentialGroup()
                                .addGap(23, 23, 23)
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 335, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(372, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
                jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 44, Short.MAX_VALUE)
                                .addContainerGap())
        );

        jPanel4.add(jPanel7, java.awt.BorderLayout.PAGE_START);

        jPanel6.setBackground(new java.awt.Color(204, 255, 255));
        jPanel6.setPreferredSize(new java.awt.Dimension(730, 80));

        jLabel6.setText("From:");

        jLabel4.setText("To:");

        txtSearchByCustomerName.setForeground(new java.awt.Color(102, 102, 102));
        txtSearchByCustomerName.setText("Search order by customer's name");
        txtSearchByCustomerName.setToolTipText("");
        txtSearchByCustomerName.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtSearchByCustomerNameFocusGained(evt);
            }

            public void focusLost(java.awt.event.FocusEvent evt) {
                txtSearchByCustomerNameFocusLost(evt);
            }
        });

        btnSearchByCustomerName.setBackground(new java.awt.Color(51, 153, 255));
        btnSearchByCustomerName.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnSearchByCustomerName.setText("Search");
        btnSearchByCustomerName.setPreferredSize(new java.awt.Dimension(72, 24));
        btnSearchByCustomerName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchByCustomerNameActionPerformed(evt);
            }
        });

        btnSearchByDate.setBackground(new java.awt.Color(51, 153, 255));
        btnSearchByDate.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnSearchByDate.setText("Search by date");
        btnSearchByDate.setPreferredSize(new java.awt.Dimension(72, 24));
        btnSearchByDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchByDateActionPerformed(evt);
            }
        });

        txtEndDate.setForeground(new java.awt.Color(102, 102, 102));
        txtEndDate.setText("dd/mm/yyyy");
        txtEndDate.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtEndDateFocusGained(evt);
            }

            public void focusLost(java.awt.event.FocusEvent evt) {
                txtEndDateFocusLost(evt);
            }
        });

        txtStartDate.setForeground(new java.awt.Color(102, 102, 102));
        txtStartDate.setText("dd/mm/yyyy");
        txtStartDate.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtStartDateFocusGained(evt);
            }

            public void focusLost(java.awt.event.FocusEvent evt) {
                txtStartDateFocusLost(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
                jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel6Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel6Layout.createSequentialGroup()
                                                .addComponent(jLabel6)
                                                .addGap(186, 186, 186)
                                                .addComponent(jLabel4)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(txtEndDate, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addComponent(txtSearchByCustomerName, javax.swing.GroupLayout.PREFERRED_SIZE, 312, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(31, 31, 31)
                                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(btnSearchByDate, javax.swing.GroupLayout.DEFAULT_SIZE, 125, Short.MAX_VALUE)
                                        .addComponent(btnSearchByCustomerName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addContainerGap(181, Short.MAX_VALUE))
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel6Layout.createSequentialGroup()
                                        .addGap(52, 52, 52)
                                        .addComponent(txtStartDate, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addContainerGap(529, Short.MAX_VALUE)))
        );
        jPanel6Layout.setVerticalGroup(
                jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel6Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(txtSearchByCustomerName, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(btnSearchByCustomerName, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                .addComponent(jLabel4)
                                                .addComponent(btnSearchByDate, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(txtEndDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addComponent(jLabel6))
                                .addContainerGap(8, Short.MAX_VALUE))
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                                        .addContainerGap(52, Short.MAX_VALUE)
                                        .addComponent(txtStartDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addContainerGap()))
        );

        jPanel4.add(jPanel6, java.awt.BorderLayout.CENTER);

        jPanel3.add(jPanel4, java.awt.BorderLayout.PAGE_START);

        jScrollPane1.setBackground(new java.awt.Color(255, 204, 204));
        jScrollPane1.setPreferredSize(new java.awt.Dimension(730, 480));

        tblOrderList.setModel(new javax.swing.table.DefaultTableModel(
                new Object[][]{

                },
                new String[]{
                        "Order ID", "Date", "Customer ID", "CustomerName", "Total", "List vegetables", "Note"
                }
        ) {
            Class[] types = new Class[]{
                    java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.Float.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean[]{
                    false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types[columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit[columnIndex];
            }
        });
        tblOrderList.setPreferredSize(new java.awt.Dimension(730, 480));
        tblOrderList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblOrderListMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblOrderList);
        if (tblOrderList.getColumnModel().getColumnCount() > 0) {
            tblOrderList.getColumnModel().getColumn(0).setResizable(false);
            tblOrderList.getColumnModel().getColumn(0).setPreferredWidth(30);
            tblOrderList.getColumnModel().getColumn(1).setResizable(false);
            tblOrderList.getColumnModel().getColumn(1).setPreferredWidth(60);
            tblOrderList.getColumnModel().getColumn(2).setResizable(false);
            tblOrderList.getColumnModel().getColumn(2).setPreferredWidth(40);
            tblOrderList.getColumnModel().getColumn(3).setResizable(false);
            tblOrderList.getColumnModel().getColumn(3).setPreferredWidth(60);
            tblOrderList.getColumnModel().getColumn(4).setResizable(false);
            tblOrderList.getColumnModel().getColumn(5).setResizable(false);
            tblOrderList.getColumnModel().getColumn(6).setResizable(false);
        }

        jPanel3.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        jPanel1.add(jPanel3, java.awt.BorderLayout.CENTER);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGap(0, 1000, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                        .addGap(0, 0, Short.MAX_VALUE)
                                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGap(0, 600, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                        .addGap(0, 0, Short.MAX_VALUE)
                                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddVegetableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddVegetableActionPerformed
        String vegetableID = txtVegetableID.getText();
        int quantity = Integer.parseInt(txtQuantity.getText());

        if (txtVegetableID.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this,
                    "Enter the vegetable ID !",
                    "Error message", JOptionPane.ERROR_MESSAGE);
            return;
        }

        if (txtQuantity.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this,
                    "Enter the quantity !",
                    "Error message", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Lấy thông tin vegetable từ database
        Vegetable vegetable = vegetableBUS.getById(Integer.parseInt(vegetableID));

        // Thêm thông tin vào bảng tblVegetableList
        DefaultTableModel model = (DefaultTableModel) tblVegetableList.getModel();
        model.addRow(new Object[]{vegetable.getVegetableID(), vegetable.getVegetableName(), vegetable.getPrice(), quantity, vegetable.getPrice() * quantity});

        float total = 0;
        for (int i = 0; i < model.getRowCount(); i++) {
            total += (float) model.getValueAt(i, 4);
        }
        txtTotal.setText(String.format("%.4f", total));
    }//GEN-LAST:event_btnAddVegetableActionPerformed

    private void btnRemoveVegetableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveVegetableActionPerformed
        DefaultTableModel model = (DefaultTableModel) tblVegetableList.getModel();
        int selectedRowIndex = tblVegetableList.getSelectedRow();

        if (selectedRowIndex == -1) {
            JOptionPane.showMessageDialog(this, "Select a vegetable to remove !",
                    "Error message", JOptionPane.ERROR_MESSAGE);
        } else {
            float totalToRemove = Float.parseFloat(model.getValueAt(selectedRowIndex, 4).toString());
            model.removeRow(selectedRowIndex);

            float currentTotal = Float.parseFloat(txtTotal.getText());
            txtTotal.setText(Float.toString(currentTotal - totalToRemove));
        }
    }//GEN-LAST:event_btnRemoveVegetableActionPerformed

    private void txtDateFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtDateFocusGained
        if (txtDate.getText().equals("dd/mm/yyyy")) {
            txtDate.setText("");
        }
    }//GEN-LAST:event_txtDateFocusGained

    private void txtDateFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtDateFocusLost
        if (txtDate.getText().isEmpty()) {
            txtDate.setText("dd/mm/yyyy");
        }
    }//GEN-LAST:event_txtDateFocusLost

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
        txtCustomerID.setText("");
        txtVegetableID.setText("");
        txtQuantity.setText("");
        txtNote.setText("");
        txtDate.setText("dd/mm/yyyy");
        txtSearchByCustomerName.setText("Search order by customer's name");
        tblVegetableList.removeAll();
        // Remove all order detail rows
        DefaultTableModel model = (DefaultTableModel) tblVegetableList.getModel();
        model.setRowCount(0);
        // Refresh order table
        showOrderListTable();
    }//GEN-LAST:event_btnResetActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        int selectedRow = tblOrderList.getSelectedRow();

        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Select a order to delete !",
                    "Error message", JOptionPane.ERROR_MESSAGE);
            return;
        }
        int orderId = Integer.parseInt(tblOrderList.getValueAt(selectedRow, 0).toString());
        int rely = JOptionPane.showConfirmDialog(
                this,
                "Xác nhận xóa orderID: " + orderId,
                "Xóa order",
                JOptionPane.YES_NO_OPTION);
        if (rely == JOptionPane.YES_OPTION) {
            if (orderBUS.deleteOrder(orderId)) {
                JOptionPane.showMessageDialog(this, "Order deleted successfully");
                showOrderListTable();
            } else {
                JOptionPane.showMessageDialog(this, "Failed to delete order!");
            }
        }

    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnAddOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddOrderActionPerformed
        if (txtDate.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this,
                    "Enter date !",
                    "Error message", JOptionPane.ERROR_MESSAGE);
            return;
        }

        if (txtCustomerID.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this,
                    "Enter the customer ID !",
                    "Error message", JOptionPane.ERROR_MESSAGE);
            return;
        }

        if (tblVegetableList.getRowCount() == 0) {
            JOptionPane.showMessageDialog(this,
                    "Add vegetable !",
                    "Error message", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // use formatter
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("dd/MM/yyyy");
        LocalDate date = LocalDate.parse(txtDate.getText(), formatter);
        int customerID = Integer.parseInt(txtCustomerID.getText());
        float total = Float.parseFloat(txtTotal.getText());
        String note = txtNote.getText();

        Order order = new Order(date, total, note);

        // Lấy thông tin customer
        Customer customer = customerBUS.getById(customerID);
        if (customer == null) {
            JOptionPane.showMessageDialog(this, "Customer not found !");
            return;
        }
        order.setCustomer(customer);

        // Thêm các order detail ứng với mỗi dòng trong Vegetable List Table
        List<OrderDetail> orderDetails = new ArrayList<>();
        for (int i = 0; i < tblVegetableList.getRowCount(); i++) {
            // Lấy dữ liệu từ bảng
            int vegetableID = Integer.parseInt(tblVegetableList.getValueAt(i, 0).toString());
            float price = Float.parseFloat(tblVegetableList.getValueAt(i, 2).toString());
            int quantity = Integer.parseInt(tblVegetableList.getValueAt(i, 3).toString());

            // Lấy thông tin vegetable trong database
            Vegetable vegetable = vegetableBUS.getById(vegetableID);
            if (vegetable == null) {
                JOptionPane.showMessageDialog(this, "Vegetable not found !");
                return;
            }

            // Trừ số lượng trong database
            vegetable.setAmount(vegetable.getAmount() - quantity);
            vegetableBUS.updateVegetable(vegetable, vegetable.getCategory().getCategoryID());

            // Tạo mới đối tượng OrderDetail
            OrderDetail orderDetail = new OrderDetail(order, vegetable, quantity, price);
            orderDetails.add(orderDetail);
        }
        // Thêm order và order detail vào database
        if (!orderBUS.addOrder(order, customerID)) {
            JOptionPane.showMessageDialog(this, "Failed to add order to database");
            return;
        }

        if (!orderBUS.addOrderDetail(orderDetails)) {
            JOptionPane.showMessageDialog(this, "Failed to add order to database");
            return;
        }
        JOptionPane.showMessageDialog(this, "Order added successfully");
        showOrderListTable();
    }//GEN-LAST:event_btnAddOrderActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        int selectedRow = tblOrderList.getSelectedRow();

        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Select a order to update !",
                    "Error message", JOptionPane.ERROR_MESSAGE);
            return;
        }

        if (txtDate.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this,
                    "The date field cannot be empty !",
                    "Error message", JOptionPane.ERROR_MESSAGE);
            return;
        }

        if (txtCustomerID.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this,
                    "The customer ID field cannot be empty !",
                    "Error message", JOptionPane.ERROR_MESSAGE);
            return;
        }

        if (tblVegetableList.getRowCount() == 0) {
            JOptionPane.showMessageDialog(this,
                    "The vegetable list cannot be empty !",
                    "Error message", JOptionPane.ERROR_MESSAGE);
            return;
        }

        int orderID = (int) tblOrderList.getValueAt(selectedRow, 0);
        LocalDate date = LocalDate.parse(txtDate.getText());
        int customerID = Integer.parseInt(txtCustomerID.getText());
        float total = Float.parseFloat(txtTotal.getText());
        String note = txtNote.getText();

        Order order = orderBUS.getById(orderID);
        order.setDate(date);
        order.setTotal(total);
        order.setNote(note);
        Customer customer = customerBUS.getById(customerID);
        if (customer == null) {
            JOptionPane.showMessageDialog(this, "Customer not found !");
            return;
        }
        order.setCustomer(customer);

        OrderBUS orderBUS = new OrderBUS();
        orderBUS.updateOrder(order);
        JOptionPane.showMessageDialog(this, "Order updated successfully");
        showOrderListTable();
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void tblVegetableListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblVegetableListMouseClicked
        int row = tblVegetableList.getSelectedRow();
        int vegetableID = Integer.parseInt(tblVegetableList.getValueAt(row, 0).toString());

        Vegetable vegetable = vegetableBUS.getById(vegetableID);
        txtVegetableID.setText(Integer.toString(vegetable.getVegetableID()));
        txtQuantity.setText(Integer.toString(vegetable.getAmount()));
    }//GEN-LAST:event_tblVegetableListMouseClicked

    private void txtSearchByCustomerNameFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtSearchByCustomerNameFocusGained
        if (txtSearchByCustomerName.getText().equals("Search order by customer's name")) {
            txtSearchByCustomerName.setText("");
        }
    }//GEN-LAST:event_txtSearchByCustomerNameFocusGained

    private void txtSearchByCustomerNameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtSearchByCustomerNameFocusLost
        if (txtSearchByCustomerName.getText().isEmpty()) {
            txtSearchByCustomerName.setText("Search order by customer's name");
        }
    }//GEN-LAST:event_txtSearchByCustomerNameFocusLost

    private void btnSearchByCustomerNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchByCustomerNameActionPerformed
        String searchByCustomerName = txtSearchByCustomerName.getText();

        if (txtSearchByCustomerName.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Enter customer's name to search !",
                    "Error message", JOptionPane.ERROR_MESSAGE);
            return;
        }

        OrderBUS orderBUS = new OrderBUS();
        showOrderListTable(orderBUS.getByCustomerName(searchByCustomerName));
    }//GEN-LAST:event_btnSearchByCustomerNameActionPerformed

    private void btnSearchByDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchByDateActionPerformed
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("dd/MM/yyyy");
        if (txtStartDate.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Enter startDate to search !",
                    "Error message", JOptionPane.ERROR_MESSAGE);
            return;
        }

        if (txtEndDate.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Enter endDate to search !",
                    "Error message", JOptionPane.ERROR_MESSAGE);
            return;
        }

        try {
            LocalDate startDate = LocalDate.parse(txtStartDate.getText(), formatter);
            LocalDate endDate = LocalDate.parse(txtEndDate.getText(), formatter);
            showOrderListTable(orderBUS.getOrdersInRange(startDate, endDate));
        } catch (DateTimeParseException e) {
            JOptionPane.showMessageDialog(this, e.getMessage(),
                    "Error message", JOptionPane.ERROR_MESSAGE);
            return;
        }
    }//GEN-LAST:event_btnSearchByDateActionPerformed

    private void txtEndDateFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtEndDateFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEndDateFocusGained

    private void txtEndDateFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtEndDateFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEndDateFocusLost

    private void txtStartDateFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtStartDateFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_txtStartDateFocusGained

    private void txtStartDateFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtStartDateFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_txtStartDateFocusLost

    private void tblOrderListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblOrderListMouseClicked
        int row = tblOrderList.getSelectedRow();
        if (row != -1) {
            String orderId = tblOrderList.getValueAt(row, 0).toString();
            Order order = orderBUS.getById(Integer.parseInt(orderId));

            txtDate.setText(order.getDate().toString());
            txtCustomerID.setText(String.valueOf(order.getCustomer().getCustomerID()));
            txtNote.setText(order.getNote());
            txtTotal.setText(String.format("%.4f", order.getTotal()));

            DefaultTableModel model = (DefaultTableModel) tblVegetableList.getModel();
            model.setRowCount(0);
            for (OrderDetail orderDetail : order.getOrderDetails()) {
                int vegetableId = orderDetail.getVegetable().getVegetableID();
                String vegetableName = orderDetail.getVegetable().getVegetableName();
                double price = orderDetail.getVegetable().getPrice();
                int quantity = orderDetail.getQuantity();
                double total = price * quantity;
                model.addRow(new Object[]{vegetableId, vegetableName, price, quantity, total});
            }
        }
    }//GEN-LAST:event_tblOrderListMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddOrder;
    private javax.swing.JButton btnAddVegetable;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnRemoveVegetable;
    private javax.swing.JButton btnReset;
    private javax.swing.JButton btnSearchByCustomerName;
    private javax.swing.JButton btnSearchByDate;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable tblOrderList;
    private javax.swing.JTable tblVegetableList;
    private javax.swing.JTextField txtCustomerID;
    private javax.swing.JTextField txtDate;
    private javax.swing.JTextField txtEndDate;
    private javax.swing.JTextArea txtNote;
    private javax.swing.JTextField txtQuantity;
    private javax.swing.JTextField txtSearchByCustomerName;
    private javax.swing.JTextField txtStartDate;
    private javax.swing.JTextField txtTotal;
    private javax.swing.JTextField txtVegetableID;
    // End of variables declaration//GEN-END:variables
}
